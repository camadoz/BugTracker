@model BugTracker.Models.Ticket

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<div class="container">
    <div class="row">
        <div class="offset-2 col-md-6">
            <div class="card card-primary">
                <div class="card-header">
                    <h3 class="card-title">Edit Ticket</h3>
                </div>
                <!-- /.card-header -->
                <!-- form start -->
                @using (Html.BeginForm("Edit", "Tickets", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.Created)
                    @Html.HiddenFor(model => model.ProjectId)
                    <div class="card-body">
                        <div class="form-group">
                            <label for="exampleInputEmail1">Ticket Type</label>
                            @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword1">Ticket Status</label>
                            @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword1">Ticket Priority</label>
                            @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label class="form-check-label" for="exampleCheck1">Ticket Title</label>
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="form-check-label" for="exampleCheck1">Ticket Title</label>
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="form-check-label" for="exampleCheck1">Ticket Description</label>
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label class="form-check-label" for="exampleCheck1">User Assigned</label>
                            @Html.DropDownList("AssignedToUserId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                        </div>


                    </div>
                    <!-- /.card-body -->

            <div class="card-footer">
                <button type="submit" class="ui blue button">Submit</button>
                @Html.ActionLink("Back To List", "Index",null, new { @class = "ui  orange  button" })
            </div>
                }
            </div>
        </div>
    </div>
          



</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>


