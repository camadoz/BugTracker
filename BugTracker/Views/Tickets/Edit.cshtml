@model BugTracker.Models.Ticket
<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark" style="font-weight:bolder; font-size:3.0rem;">Ticket Edit</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">

                    <li class="breadcrumb-item active"></li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<!-- Main content -->


<div class="container">
    <div class="row">
        <div class="offset-2 col-md-6">
            <div class="card card-primary">
                <div class="card-header">
                    <h3 class="card-title">Edit Ticket</h3>
                </div>
                <!-- /.card-header -->
                <!-- form start -->
                @using (Html.BeginForm("Edit", "Tickets", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.Created)
                    @Html.HiddenFor(model => model.ProjectId)
                    @Html.HiddenFor(model => model.AssignedToUserId)
                    @Html.HiddenFor(model => model.OwnerUserId)

            <div class="card-body">
                <div class="form-group">
                    <label for="exampleInputEmail1">Ticket Type</label>
                    @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                </div>
                @if (User.IsInRole("Admin"))
                {
                    <div class="form-group">
                        <label for="exampleInputPassword1">Ticket Status</label>
                        @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                    </div>


                }

                <div class="form-group">
                    <label for="exampleInputPassword1">Ticket Priority</label>
                    @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label class="form-check-label" for="exampleCheck1">Ticket Title</label>
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label class="form-check-label" for="exampleCheck1">Ticket Description</label>
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
                @if (User.IsInRole("Admin"))
                {
                    <div class="form-group">
                        <label class="form-check-label" for="exampleCheck1">User Assigned</label>
                        @Html.DropDownList("AssignedToUserId", null, "-- Select A Developer --", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                    </div>


                }



            </div>
                    <!-- /.card-body -->

                    <div class="card-footer">
                        @if (User.IsInRole("Admin") || User.IsInRole("Project Manager") || User.IsInRole("Submitter") || User.IsInRole("Developer") )
                        {
                            <button type="submit" class="ui blue button">Submit</button>
                        }

                        @Html.ActionLink("Back To List", "Index", null, new { @class = "ui  orange  button" })
                    </div>
                }
            </div>
        </div>
    </div>




</div>



