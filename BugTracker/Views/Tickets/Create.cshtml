@model BugTracker.Models.Ticket


<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark" style="font-weight:bolder; font-size:3.0rem;">Create Ticket Section</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">

                    <li class="breadcrumb-item active"></li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<!-- Main content -->


<div class="container">


    <div class="row">
        <div class="offset-2 col-md-8">
            <div class="card card-primary">
                <div class="card-header">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <h3 class="card-title h4">Create Ticket</h3>
                </div>
                <!-- /.card-header -->
                <!-- form start -->

                @using (Html.BeginForm("Create", "Tickets", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="card-body">


                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <label class="control-label col-md-4">Select A Project</label>
                            <div class="col-md-12">
                                @Html.DropDownList("ProjectId", null, "--- Current Projects ---", htmlAttributes: new { @class = "form-control col-md-12" })
                                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">Select A Ticket TYpe</label>
                            <div class="col-md-12">
                                @Html.DropDownList("TicketTypeId", null, "--- Select A Ticket TYpe ---", htmlAttributes: new { @class = "form-control col-md-12" })
                                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                <label class="control-label col-md-4">Select A Ticket TYpe</label>
                                <div class="col-md-10">
                                    @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group">
                            <label class="control-label col-md-4">Select the priority of the ticket</label>
                            <div class="col-md-12">
                                @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control col-md-12" })
                                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        @*<div class="form-group">
                                @Html.LabelFor(model => model.OwnerUserId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.OwnerUserId, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.OwnerUserId, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.AssignedToUserId, "AssignedToUserId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("AssignedToUserId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                                </div>
                            </div>*@
                        @*<div class="form-group">
                                <label for="exampleInputFile">File input</label>
                                <div class="input-group">
                                    <div class="custom-file">
                                        <input type="file" class="custom-file-input" id="inputfile" name="inputfile">
                                        <label class="custom-file-label" for="exampleInputFile">Choose file</label>
                                    </div>
                                    <div class="input-group-append">
                                        <span class="input-group-text" id="">Upload</span>
                                    </div>
                                </div>
                            </div>*@

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @if (User.IsInRole("Submitter") )
                                {

                                <input type="submit" value="Create" class="ui blue button" />

                                }
                            
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>




</div>











@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>

    $("#leftNavCreateTicket").addClass("active");


</script>



}


   
   
